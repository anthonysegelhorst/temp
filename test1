head	2.3;
access;
symbols;
locks; strict;
comment	@# @;


2.3
date	2009.06.12.20.49.16;	author f011249;	state Exp;
branches;
next	2.2;

2.2
date	2009.06.12.20.47.54;	author f011249;	state Exp;
branches;
next	2.1;

2.1
date	2008.03.04.16.32.26;	author i011665;	state Exp;
branches;
next	;


desc
@@


2.3
log
@Added option to check NetSnmp health
@
text
@#!/usr/bin/perl -w

# $Id: xfer_tix,v 0.1 2007/03/23 13:33:56 d003034 Exp $

use strict;
use lib '/Tivoli/esmops/lib';
use POSIX;
use Date::Manip;
#use ESM::TECevent qw(wtdumprl mk_tec_evt_iterator);

$ENV{'PATH'}    = "/Tivoli/bin/aix4-r1/bin:/usr/bin";
$ENV{'LIBPATH'} = "/Tivoli/lib/aix4-r1";
$ENV{'TZ'}      = "EST5EDT";

#my $def_time = "1 hour";
#my $def_evts = 5;
#my $def_host = 5;

my $tix_no;
my $tix_que;
my $tix_message;
my $sub_name;
my $free_text;
my $hostnm;
my $config;
my $stdid;
my $remotecmd;

my $LOGFL="/Tivoli/esmops/log/tr_itm5.log";

my $who=`whoami`;
if ($who =~ /root/i) {
        print "DO not run as ROOT\n";
        exit (1);
}


&tix_tool;

##############################################################################

sub do_menu {
    my $menu = shift;
    my $opt;

    while (1) {
	foreach my $m (sort keys %$menu) {
	    print "$m: $menu->{$m}[0]\n";
	}
	print "\nEnter option: ";
	chomp($opt = <STDIN>);
	$opt = lc substr($opt, 0, 1);
        if ($opt eq "q") { $opt = "x"}
	if ($menu->{$opt}) {
	    if (ref ($menu->{$opt}[1]) eq "CODE") {
                print "=" x 78, "\n";
		&{$menu->{$opt}[1]}(splice(@@{$menu->{$opt}}, 2));
                print "=" x 78, "\n";
	    } else {
		# use a non-ref to exit loop
		last;
	    }
	}
        print "\nWas this the ROOT CAUSE (y or n) [n]:";
        chomp($opt = <STDIN>);
        if ($opt =~ /y/i) {
          $sub_name = "ROOTCAUSE:$sub_name";
          &LOGIT($sub_name,$hostnm);
        }
    }
}

sub tix_tool {
    my %menu = (
                'a' => [ "LCFD Status",                        \&lcfd_status ],
                '0' => [ "uname -a",                               \&uname_a ],
                '1' => [ "wepstatus",                            \&wepstatus ],
                '2' => [ "Clean up ITM TDW",                     \&cleandisk ],
                '3' => [ "BETA ALL Check Hung ITM",            \&chk_hung_itm],
                '4' => [ "BETA ALL Kill Hung ITM",           \&kill_hung_itm ],
                '5' => [ "Check System Uptime",                  \&sysuptime ],
                '6' => [ "View ITM Config File",                \&viewconfig ],
                '7' => [ "View ITM Config File LOG",         \&viewconfiglog ],
                '8' => [ "View LCFD Logfile  via SNMP",    \&viewlcfdlogsnmp ],
                '9' => [ "Restart LCFD via SNMP",          \&restartlcfdsnmp ],
                '+' => [ "wlssub the EP",         		  \&wlssubep ],
		'b' => [ "ITM 5 Status ",                       \&itm_status ],
		'c' => [ "ITM HB Status",                           \&chk_hb ],
		'd' => [ "Check httppost.out file",            \&chk_httpout ],
                'e' => [ "Check last.cfg",   	       	          \&chk_last ],
                'f' => [ "WIN Tmw2k.log view",		      \&chk_tmw2klog ],
		'g' => [ "Check dmxout.log",		       \&chk_dmxout  ],
                'h' => [ "Restart ITM Engine", 		       \&itm_restart ],
		'i' => [ "WIN Check Hung Tmw2k",             \&chk_hungtmw2k ],
		'j' => [ "WIN Kill Hung Tmw2k",		       \&win_itmkill ],
		'k' => [ "Get EP Label",		            \&get_ep ],
                'l' => [ "List Group - Peregrine Q",               \&listgrp ],
                'm' => [ "List User Group - Peregrine Q",      \&listusergrp ],
                'n' => [ "Disk Space",      	     	         \&diskspace ],
                'o' => [ "NIX Get trace_dmxeu.log",     \&chk_trace_dmxeulog ],
                'p' => [ "Remote Command",	               \&remote_exec ],
                'r' => [ "Check LCFD.log",	               \&chk_lcfdlog ],
                's' => [ "Get Interp",	                        \&get_interp ],
                't' => [ "Go To Ticket Menu (ticket_menu)",       \&tix_menu ],
                'u' => [ "Get EP Web Page",     		   \&get_web ],
                'v' => [ "Task to Remove ITM",     		 \&clean_itm ],
                'w' => [ "UNIX which hunt ",     		\&which_hunt ],
                'y' => [ "localhost lookup ",     		 \&localhost ],
                'z' => [ "UNIX ulimit -a ",    		            \&ulimit ],
                '-' => [ "Check NetSNMP agent health",     \&get_snmp_health ],
                'x' =>  [ "Exit",                                          0 ],
		);
    &do_menu(\%menu);
}
   

sub get_hostname {
    # Initialize hostnm for first time thru
    $hostnm = "" if (!$hostnm);
    print "Enter Endpoint Label [$hostnm]: ";
    chomp(my $hostnew = <STDIN>);
    if (!$hostnew) {
      # They just pressed enter, take previous value
      $hostnm=$hostnm;
    } else {
      # Take the new value
      $hostnm=$hostnew;
    }
}

sub get_config {
    # Initialize $config for first time thru
    $config = "" if (!$config);
    print "cpu_load_mon\n";
    print "fileage_mon\n";
    print "filesize_mon\n";
    print "filesys_mbfree_mon\n";
    print "filesys_perc_mon\n";
    print "hardware_mon\n";
    print "inodes_perc_mon\n";
    print "logfile_mon\n";
    print "logfile_win_mon\n";
    print "memory_mon\n";
    print "network_col_mon\n";
    print "network_ierr_mon\n";
    print "network_oerr_mon\n";
    print "os_numscript_mon\n";
    print "os_stringscript_mon\n";
    print "os_uptime_mon\n";
    print "page_allswap_mon\n";
    print "page_swap_mon\n";
    print "perfmon_counter_max\n";
    print "perfmon_counter_min\n";
    print "process_max_mon\n";
    print "process_mon\n";
    print "remote_filesys_perc_mon\n";
    print "service_mon\n";
    print "\n\n";
    print "Enter Config File Name [$config]: ";
    chomp(my $confignew = <STDIN>);
    if (!$confignew) {
      # They just pressed enter, take previous value
      $hostnm=$hostnm;
    } else {
      # Take the new value
      $config=$confignew;
    }
}


sub get_cmd {
    print "Enter the Remote Command to run: ";
    chomp($remotecmd = <STDIN>);
}

sub tix_menu {
    exec("/Tivoli/esmops/bin/ticket_menu");
}

sub listgrp {
    #print "Enter hostname to lookup Q: ";
    #chomp($hostnm = <STDIN>);
    &get_hostname();
    my $cmd="/Tivoli/esmops/bin/listgrp $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    $sub_name = "listgrp";
    &LOGIT($sub_name,$hostnm);
}

sub listusergrp {
    print "Enter the std id the user to lookup Q: ";
    chomp($stdid = <STDIN>);
    my $cmd="/Tivoli/esmops/bin/listusergrp $stdid";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
}

sub get_snmp_health {
    &get_hostname();
    $sub_name = 'get_snmp_health';
    my $cmd = "/Tivoli/esmops/bin/checkagent.pl -h $hostnm";
    print "Running: $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);
}

sub lcfd_status {
    &get_hostname();
    $sub_name = "lcfd_status";
    my $cmd="wadminep $hostnm view_version";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`; 
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);

}

sub wepstatus {
    &get_hostname();
    $sub_name = "wepstatus";
    my $cmd="wepstatus $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`; 
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);

}

sub wlssubep {
    &get_hostname();
    $sub_name = "wlssubep";
    my $cmd="wlssub \@@Endpoint:$hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);

}


sub itm_status {
    &get_hostname();
    $sub_name = "itm_status";
    my $cmd="wdmlseng -e $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);
}

sub chk_hb {
    &get_hostname();
    $sub_name = "chk_hb";
    my $cmd="/Tivoli/esmops/bin/CheckHB $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);

}

sub chk_httpout {
    &get_hostname();
    $sub_name = "chk_httpout";
    my $cmd="wadminep $hostnm view_file ./httppost.out";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);

}

sub viewlcfdlogsnmp {
    &get_hostname();
    $sub_name = "viewlcfdlogsnmp";
    my $cmd="/opt/net-snmp/bin/snmpwalk -v2c -c jpmc $hostnm:16161 enterprises.22329.0.2.4.3";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);

}

sub restartlcfdsnmp {
    &get_hostname();
    $sub_name = "restartlcfdsnmp";
    my $cmd="/opt/net-snmp/bin/snmpwalk -v2c -c jpmc $hostnm:16161 enterprises.22329.0.2.4.1";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);

}



sub chk_last {
    &get_hostname();
    $sub_name = "chk_last";
    my $cmd="wadminep $hostnm view_file ./last.cfg";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    print "Make local_ip_interface is not set in the last.cfg\n";

    &LOGIT($sub_name,$hostnm);
}

sub clean_itm {
    &get_hostname();
    $sub_name = "clean_itm";
    my $cmd="wdmcmd -stop -e $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    my $cmd2="wep $hostnm get interp";
    my $interp2=`$cmd2 2>&1`;
    chomp $interp2;
    if ($interp2 =~ /w32-ix86/) {
    	$cmd2="/Tivoli/esmops/bin/itm_kill.sh $hostnm";
    	print "Running:  $cmd2 \n\n";
    	my $msg2=`$cmd2 2>&1`;
    	print "$msg2\n";
    }

    my $cmd1="wruntask -t DMEndpointRemoveFiles -l \"IBM Tivoli Monitoring Tasks\" -h \@@Endpoint:$hostnm -m 180 -o 15";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}

sub cleandisk {
    &get_hostname();
    $sub_name = "cleandisk";
    my $cmd="wdmcmd -stop -e $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    my $cmd1="wruntask -t DMCleanDB -l \"IBM Tivoli Monitoring Tasks\" -h \@@Endpoint:$hostnm -m 180 -o 15";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    my $cmd2="wdmcmd -restart -e $hostnm";
    print "Running:  $cmd2 \n\n";
    my $msg2=`$cmd2 2>&1`;
    $msg2 .= "\n \n Run the Tune ITM OS Monitors now, make sure and set your LOB in EQ also";
    print "$msg2\n";


    &LOGIT($sub_name,$hostnm);
}



sub chk_tmw2klog {
    &get_hostname();
    $sub_name = "chk_tmw2klog";
    # my $cmd="wadminep $hostnm exec_process sh -c \"tail -15 ./LCFNEW/Tmw2k/Tmw2k.log > out.txt\"";
    my $cmd="wadminep $hostnm view_file ./LCFNEW/Tmw2k/Tmw2k.log | tail -15";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
#    my $cmd1="wadminep $hostnm view_file ./out.txt";
#    print "Running:  $cmd1 \n\n";
#    my $msg1=`$cmd1 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}

sub which_hunt {
    &get_hostname();
    $sub_name = "which_hunt";
    my $cmd="wadminep $hostnm exec_process sh -c \"which ls > out.txt 2>&1\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}

sub localhost {
    &get_hostname();
    $sub_name = "localhost";
    my $cmd="wadminep $hostnm exec_process sh -c \"nslookup localhost > out.txt 2>&1\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}

sub ulimit {
    &get_hostname();
    $sub_name = "ulimit";
    my $cmd="wadminep $hostnm exec_process sh -c \"ulimit -a > out.txt 2>&1\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}

sub uname_a {
    &get_hostname();
    $sub_name = "uname_a";
    my $cmd="wadminep $hostnm exec_process sh -c \"uname -a > out.txt 2>&1\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}





sub chk_trace_dmxeulog {
    &get_hostname();
    $sub_name = "chk_trace_dmxeulog";
    my $cmd="wadminep $hostnm exec_process sh -c \"tail -15 ./LCFNEW/AMW/logs/trace_dmxeu.log > out.txt\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}


sub chk_lcfdlog {
    &get_hostname();
    $sub_name = "chk_lcfdlog";
    my $cmd="wadminep $hostnm exec_process sh -c \"tail -50 ./lcfd.log > out.txt\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}

sub chk_dmxout {
    &get_hostname();
    $sub_name = "chk_dmxout";
    my $cmd="wadminep $hostnm view_file ./LCFNEW/Tmw2k/Unix/data/dmxout.log";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}

sub itm_restart {
    &get_hostname();
    $sub_name = "itm_restart";
    my $cmd="wdmcmd -stop -e $hostnm";
    print "Running:  $cmd \n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    print "Running:  $cmd \n";
    my $msg2=`$cmd 2>&1`;
    print "$msg2\n";

    my $cmd1="wdmcmd -restart -e $hostnm";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";

    &LOGIT($sub_name,$hostnm);
}

sub chk_hungtmw2k {
    &get_hostname();
    $sub_name = "chk_hungtmw2k";
    my $cmd="wadminep $hostnm exec_process sh -c \"ntprocinfo |grep -i tmw2k > out.txt\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";
    print "See the OPTION to Kill tmw2k process if there is hung processes\n";

    &LOGIT($sub_name,$hostnm);
}

sub win_itmkill {
    &get_hostname();
    $sub_name = "win_itmkill";
    my $cmd="/Tivoli/esmops/bin/itm_kill.sh $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}

sub get_ep {
    &get_hostname();
    $sub_name = "get_ep";
    my $cmd="cat /Tivoli/esmops/data/wlookup/current.csv |grep -i $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}

sub diskspace {
    &get_hostname();
    $sub_name = "diskspace";
    my $cmd="wep $hostnm get interp";
    my $interp=`$cmd 2>&1`;
    chomp $interp;
    if ($interp =~ /w32-ix86/) {
	&win_diskspace();
    }
    else {
        &nix_diskspace();
    }        
}

sub win_diskspace {
#    &get_hostname();
    $sub_name = "win_diskspace";
    my $cmd="wadminep $hostnm exec_process sh -c \"ntfsinfo > out.txt;pwd >> out.txt\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";
    &LOGIT($sub_name,$hostnm);
}

sub nix_diskspace {
#    &get_hostname();
    $sub_name = "nix_diskspace";
    my $cmd="wadminep $hostnm exec_process sh -c \"df -k > out.txt;pwd >> out.txt\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";
    &LOGIT($sub_name,$hostnm);
}

sub sysuptime {
    &get_hostname();
    $sub_name = "sysuptime";
    my $cmd="wep $hostnm get interp";
    my $interp=`$cmd 2>&1`;
    chomp $interp;
    if ($interp =~ /w32-ix86/) {
        &win_uptime();
    }
    else {
        &nix_uptime();
    }
}

sub viewconfig {
    &get_hostname();
    &get_config();
    $sub_name = "viewconfig";
    my $cmd="wadminep $hostnm view_file ./jpmc/$config.cfg";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);
}

sub viewconfiglog {
    &get_hostname();
    &get_config();
    $sub_name = "viewconfiglog";
    my $cmd="wadminep $hostnm view_file ./jpmc/$config.log";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";
    &LOGIT($sub_name,$hostnm);
}



sub win_uptime {
#   &get_hostname();
    $sub_name = "win_uptime";
    my $cmd="wadminep $hostnm exec_process sh -c \"net statistics server |grep Statistics > out.txt\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";
    &LOGIT($sub_name,$hostnm);
}

sub nix_uptime {
#    &get_hostname();
    $sub_name = "nix_uptime";
    my $cmd="wadminep $hostnm exec_process sh -c \"uptime > out.txt\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    my $cmd1="wadminep $hostnm view_file ./out.txt";
    print "Running:  $cmd1 \n\n";
    my $msg1=`$cmd1 2>&1`;
    print "$msg1\n";
    &LOGIT($sub_name,$hostnm);
}


sub remote_exec {
    &get_hostname();
    &get_cmd();
    $sub_name = "remote_exec";
    my $cmd="/Tivoli/esmops/bin/remote_cmd.sh $hostnm \"$remotecmd\"";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}

sub kill_hung_itm {
    &get_hostname();
    $sub_name = "kill_hung_itmx";
    my $cmd="/Tivoli/esmops/bin/clean_dmae $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}

sub chk_hung_itm {
    &get_hostname();
    $sub_name = "chk_hung_itm";
    my $cmd="/Tivoli/esmops/bin/check_dmae $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}





sub get_web {
    &get_hostname();
    $sub_name = "get_web";
    my $cmd="/Tivoli/esmops/bin/41110_epwebcli.pl -M -a -e $hostnm";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}


sub get_interp {
    &get_hostname();
    $sub_name = "get_interp";
    my $cmd="wep $hostnm get interp";
    print "Running:  $cmd \n\n";
    my $msg=`$cmd 2>&1`;
    print "$msg\n";

    &LOGIT($sub_name,$hostnm);
}





sub LOGIT {

   my $LOGFL="/Tivoli/esmops/log/tr_itm5.log";
   my $logtime = scalar localtime();
   my $who = `whoami`;
   chomp $who;
   open(LOGFILE,">> $LOGFL");
   print LOGFILE "$logtime -- $who -- $hostnm -- $sub_name\n";
   close(LOGFILE);

}








@


2.2
log
@Current version from 28
@
text
@d110 1
d201 9
@


2.1
log
@Initial add of Tivoli/esmops files into DTS_MIS structure - baselined at v 2.1
@
text
@d25 1
d78 9
d130 40
d223 12
d268 24
d307 1
a307 1
    my $cmd="wruntask -t DMEndpointRemoveFiles -l \"IBM Tivoli Monitoring Tasks\" -h \@@Endpoint:$hostnm -m 180 -o 15";
d312 15
d330 24
d567 65
d644 26
@

